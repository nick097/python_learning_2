# Списки можно также назвать массивами,
# так как выполняют они схожую роль.
# В Python существует множество разновидностей таких "массивов".
# В уроке мы рассмотрели лишь первый тип, который называется списком и имеет следующие характеристики:
#
# его элементы можно переопределять;
# в него можно добавлять новые элементы;
# из него можно удалять элементы;
# в качестве ключей идут индексы (числа - 0, 1, 2...).
#
#
# Это не все характеристики списка, тем не менее это ключевые моменты,
# которые отличают его от других "массивов" в языке Python.
#
# Для списков существует большое количество функций,
# которые можно применять для добавления, удаления или же поиска элементов.
#
# В списках можно хранить различную информацию. К примеру,
# вы можете хранить в нем сведения про всех студентов в группе.

# Пример:

lis = ["Андрей", "Иван", "Василий", "Петро", "Максим", "Дима"]
# После такой записи в одном месте у вас будут собраны все имена студентов в группе.
# Согласитесь, это намного удобнее, нежели создавать 10 или даже 20 разных переменных.
# В дальнейшем мы изучим дополнительные вещи, которые позволят хранить не просто имена студентов,
# а еще и характеристики каждого из студентов.

# Исходный код

# Списки
nums = [5, 7, 2, 4, 7, True, "Hello", 6.7, [5, 7]]

nums[0] = 50
nums[5] = 1.01

print(nums[-1][1])



# Функции списков
numbers = [5, 2, 7]
numbers[3] = 100
numbers.append(100) #Добавление нового элемента массива. Добаляется элемент последним
numbers.insert(1, True) ##Добавить элемент в любое место масиива используя ИНДЕКС и значение.
# (счет индексов начинается ВСЕГДА с нуля)
#ВАЖНО элемент который был на этом месте сдвинатся в право, тем самым меняя индекс на"+1"

b = [5, 6, 8]
numbers.extend(b) #добавляем в существующий список несколько элементо(можно чере переменную,Ф можно и без)
numbers.extend([5, 6, 8])
numbers.reverse() # #  напечатать массив в обратном порядке
numbers.sort()  #   Сортировка по алфавиту элементов массива

numbers.pop(-2)    # функция удаления последнего элемента массива если индекс не передается
# если индекс передавать - удаляется элемент с указанным индексом
numbers.remove(6)   # удаление элемента по названию

numbers.clear()  #  метод удаляет все элементы

print(numbers.count(True))  # подсчитывает сколько раз в масве встречается переданный элемент
print(len(numbers))   # #напечатать длину массива(выводит на печать кол-во элементов в массиве)
# Работа со списками
nums = [5, 2, 7, "50", False]

for el in nums:
    el *= 2
    print(el)


n = int(input("Enter length: "))

user_list = []